<?php
if (!defined('ABSPATH')) { exit; }

/**
 * ماژول: اسکن بدافزار
 * - اسکن سریع فایل‌های PHP برای الگوهای رایج Backdoor/WebShell/Obfuscation
 * - استفاده از کلاس اسکنر داخلی در صورت وجود (modules/scanners/class-rsp-malware-scanner.php)
 * - گزارش خلاصه + بازگرداندن لیست فایل‌های مشکوک (تا سقف ایمن)
 * - ثبت لاگ با نوع: malware_scan
 */
class RSP_Module_Malware implements RSP_Module_Interface {

    /** بوت ماژول (در این نسخه فقط متدهای دستی/ایجکسی) */
    public function init() {
        // می‌توان Cron دوره‌ای افزود؛ فعلاً درخواستی
    }

    /**
     * اسکن سریع — خروجی مناسب برای AJAX پنل ادمین
     * @return array {report: string, found: array<int, array{file, reason, snippet?}>, scanned: int, elapsed: float}
     */
    public function scan_quick() {
        $t0 = microtime(true);

        // اگر اسکنر اختصاصی وجود دارد، از آن استفاده کن
        if (class_exists('RSP_Malware_Scanner')) {
            try {
                $scanner = new RSP_Malware_Scanner([
                    'max_files'  => 12000,
                    'max_bytes'  => 1024*1024*2, // 2MB
                    'extensions' => ['php','phtml','php5','php7','php8'],
                ]);
                $res = $scanner->run();
                $elapsed = microtime(true) - $t0;
                do_action('rsp_activity_log','malware_scan',[ 'scanned' => $res['scanned'], 'suspicious' => count($res['found']), 'elapsed' => $elapsed ]);
                return [
                    'report'  => $this->format_report($res['scanned'], $res['found'], $elapsed),
                    'found'   => $res['found'],
                    'scanned' => (int)$res['scanned'],
                    'elapsed' => (float)$elapsed,
                ];
            } catch (\Throwable $e) {
                // اگر کلاس خطا داد، به اسکن ساده برگرد
            }
        }

        // --- اسکن ساده داخلی ---
        $targets = $this->default_targets();
        $exts    = ['php','phtml','php5','php7','php8'];
        $limit_files = 10000; // سقف ایمنی
        $max_bytes   = 1024*1024*2; // 2MB

        $patterns = $this->signatures();
        $found = [];
        $scanned = 0;

        foreach ($targets as $base) {
            if (!is_dir($base)) continue;
            $it = new RecursiveIteratorIterator(
                new RecursiveDirectoryIterator($base, FilesystemIterator::SKIP_DOTS),
                RecursiveIteratorIterator::SELF_FIRST
            );
            foreach ($it as $file) {
                if (!$file->isFile()) continue;
                $ext = strtolower(pathinfo($file->getFilename(), PATHINFO_EXTENSION));
                if (!in_array($ext, $exts, true)) continue;

                $scanned++;
                if ($scanned > $limit_files) break 2;

                $size = $file->getSize();
                if ($size > $max_bytes) continue; // فایل‌های خیلی بزرگ را رد کن

                $path = (string) $file;
                $buf  = @file_get_contents($path);
                if ($buf === false) continue;

                $hit = $this->match_buf($buf, $patterns);
                if ($hit) {
                    $found[] = [
                        'file'   => $path,
                        'reason' => implode(', ', $hit['tags']),
                        'snippet'=> $this->make_snippet($buf, $hit['offset']),
                    ];
                }
            }
        }

        $elapsed = microtime(true) - $t0;
        do_action('rsp_activity_log','malware_scan',[ 'scanned' => $scanned, 'suspicious' => count($found), 'elapsed' => $elapsed ]);

        return [
            'report'  => $this->format_report($scanned, $found, $elapsed),
            'found'   => $found,
            'scanned' => (int)$scanned,
            'elapsed' => (float)$elapsed,
        ];
    }

    /** مسیرهای پیش‌فرض برای اسکن */
    private function default_targets() {
        $targets = [ ABSPATH ];
        if (defined('WP_CONTENT_DIR')) $targets[] = WP_CONTENT_DIR;
        if (function_exists('get_theme_root')) $targets[] = get_theme_root();
        if (defined('WP_PLUGIN_DIR')) $targets[] = WP_PLUGIN_DIR;
        // حذف تکراری‌ها
        return array_values(array_unique(array_filter($targets)));
    }

    /** امضاهای ساده بدافزار/ابهام‌سازی */
    private function signatures() {
        $rx = [];
        $add = function($pattern, $tag) use (&$rx) {
            $rx[] = ['re' => $pattern, 'tag' => $tag];
        };
        // اجرای کد پویا / توابع خطرناک
        $add('/\\beval\\s*\(/i', 'eval(');
        $add('/\\bassert\\s*\(/i', 'assert(');
        $add('/\\bcreate_function\\s*\(/i', 'create_function(');
        $add('/\\b(passthru|shell_exec|system|proc_open|popen)\\s*\(/i', 'exec');
        // ابهام‌سازی/دیکدینگ
        $add('/\\b(base64_decode|gzinflate|gzuncompress|str_rot13)\\s*\(/i', 'obfuscation');
        $add('/preg_replace\\s*\(.*?\\/e.*?\)/is', 'preg_replace /e');
        // Backdoorهای شناخته‌شده
        $add('/wp-vcd/i', 'wp-vcd');
        $add('/FilesMan|b374k|r57shell|WSOshell|c99shell/i', 'webshell');
        // توابع با ورودی مستقیم از سوپرگلوبال‌ها
        $add('/\\$\\_(GET|POST|REQUEST|COOKIE)\\s*\[[^\]]+\]\\s*\(/i', 'superglobal-call');
        return $rx;
    }

    /** جست‌وجوی امضا در محتوای فایل */
    private function match_buf($buf, $patterns) {
        foreach ($patterns as $p) {
            if (preg_match($p['re'], $buf, $m, PREG_OFFSET_CAPTURE)) {
                return [ 'tags' => [$p['tag']], 'offset' => isset($m[0][1]) ? (int)$m[0][1] : 0 ];
            }
        }
        return null;
    }

    /** تولید اسنیپت امن برای گزارش */
    private function make_snippet($buf, $offset, $len = 160) {
        $start = max(0, $offset - (int)($len/2));
        $snip  = substr($buf, $start, $len);
        // پاکسازی کاراکترهای کنترل
        $snip  = preg_replace('/[\x00-\x08\x0B\x0C\x0E-\x1F]/', '', $snip);
        return trim($snip);
    }

    /** فرمت خروجی متنی کوتاه */
    private function format_report($scanned, $found, $elapsed) {
        $lines = [];
        $lines[] = sprintf(__('فایل‌های بررسی‌شده: %d','ready-secure-pro'), (int)$scanned);
        $lines[] = sprintf(__('موارد مشکوک: %d','ready-secure-pro'), is_array($found)? count($found) : (int)$found);
        $lines[] = sprintf(__('زمان اجرا: %.2f ثانیه','ready-secure-pro'), (float)$elapsed);
        if (is_array($found) && !empty($found)) {
            $lines[] = '---';
            $max = 50;
            $i = 0;
            foreach ($found as $row) {
                $i++; if ($i > $max) { $lines[] = __('... ادامه دارد','ready-secure-pro'); break; }
                $lines[] = sprintf('- %s (%s)', isset($row['file'])?$row['file']:'', isset($row['reason'])?$row['reason']:'');
            }
        }
        return implode("\n", $lines);
    }
}
